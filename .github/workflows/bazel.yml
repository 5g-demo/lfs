# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# owner: @magma/approvers-gw, @magma/approvers-infra
# purpose: Unit testing and packaging the AGW with Bazel. Starlark format checking.
# remediation: https://magma.github.io/magma/docs/next/bazel/agw_with_bazel

name: AGW Build, Format & Test Bazel
on:
  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      publish_bazel_profile:
        description: 'Publish bazel profile data (default: false)'
        required: false
        default: false
        type: boolean
  workflow_call:
    outputs:
      artifacts:
        value: ${{ jobs.bazel_package.outputs.artifacts }}
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - 'release/*'
permissions:
  contents: write 
env:
  BAZEL_BASE_IMAGE: "ghcr.io/magma/magma/bazel-base:latest"
  # Warning: the values of BAZEL_CACHE_PLAIN_IMAGE and BAZEL_CACHE_PROD_IMAGE
  # need to be repeated in the matrix workflow includes for "docker-image-cache".
  BAZEL_CACHE_PLAIN_IMAGE: "ghcr.io/magma/magma/bazel-cache-plain:latest"
  BAZEL_CACHE_PROD_IMAGE: "ghcr.io/magma/magma/bazel-cache-prod:latest"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  bazel_package:
    name: Bazel Package Job
    runs-on: ubuntu-20.04
    steps:
      - name: Check Out Repo
        # This is necessary for overlays into the Docker container below.
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
      - name: Push Packages to Git Repository
         # GitHub token for authentication
        run: |
          git config --global user.email "mohin.my@gmail.com"
          git config --global user.name "mohin987"
          mkdir packages
          touch packages/tp.text
          echo "Hi Text" > packages/tp.text
          git add .
          git commit -m "Add built .deb packages" || echo "No changes to commit"
          git status
          # Push to the new repository
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} -f
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
